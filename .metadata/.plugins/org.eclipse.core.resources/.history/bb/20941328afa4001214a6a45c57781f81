# _*_ coding: gb2312 _*_
from django.shortcuts import render_to_response
from xt.models import Branch, Config, Composition
import os
from xt import settings
from django.http.response import HttpResponseRedirect, HttpResponse
from util import ReceiveFile

COMPOSITIONS = os.path.join(settings.MEDIA_ROOT, 'compositions')

def contents(request):
    user = request.user
    currentpage = 2;
    branches = Branch.objects.all()
    compositions = Composition.objects.order_by('-date')
    config = Config.objects.get(id=1)
    title = branches.get(id=currentpage).name
    summary = branches.get(id=currentpage).summary
    return render_to_response('composition/article.html', locals())

def show(request, index):
    title = u'识文'
    compositions = Composition.objects.order_by('-date')
    csit = compositions.iterator()
    
    prev = csit.next().id
    tmp = prev
    
    while int(tmp) != int(index):
        prev = tmp
        try:
            tmp = csit.next().id
        except:
            break
        
    try:
        nxt = csit.next().id
    except:
        nxt = index
    
    filename = Composition.objects.get(id=index).filename
    filepath = os.path.join(COMPOSITIONS, filename)
    datas = open(filepath).read()
    current = int(index)
    return render_to_response('composition/article-show.html', locals())

def create (request):
    title = u'新文'
    if request.method == 'POST':
        data = request.POST.get('bbcode_field', '')
        subject = request.POST.get('subject', 'unkown subject')
        if data:
            try:
                path = os.path.join(COMPOSITIONS, subject)
                open(path, 'w').write(data)
                composition = Composition.objects.create(filename=subject, author=request.user)
                composition.save()
                return HttpResponseRedirect('/compositions/show/' + repr(Composition.objects.count()))
            except Exception, e:
                return HttpResponse(e)
        else:
            pass
    else:
        return render_to_response('composition/article-create.html', locals())

def ajax(request):
    if request.method == 'GET':
        opt = request.GET['opt']
        index = request.GET['index']
        try:
            Composition.objects.get(id=index).delete()
            return HttpResponse('ok')
        except Exception, e:
            HttpResponse(e)
    else:
        uploaded = request.read
        file_size = int(uploaded.im_self.META['CONTENT_LENGTH'])
        file_name = request.GET.get('qqfile')
        image_content = request.read(file_size)
        return HttpResponse({'error': opt + file})